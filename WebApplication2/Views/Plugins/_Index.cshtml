@model IEnumerable<WebApplication2.Models.Plugin>

@using WebApplication2.Services
@using WebApplication2.Models.UserEntities
@inject IUserEntityLoader UserEntityServices

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RelatedSoftware)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.RelatedSoftware.Id" asp-controller="Softwares">@(item.RelatedSoftware.Name)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Company)
            </td>
            <td>
                @if ((await UserEntityServices.GetCurrentUserEntityType(User)) >= UserEntityType.Editor && item.CanEdit((await UserEntityServices.GetCurrentUserEntity(User))))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa fa-pencil"></i> Edit</a> <text>|</text>
                    <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info-circle"></i> Details</a> <text>|</text>
                    <a asp-action="Delete" asp-route-id="@item.Id"><i class="fa fa-trash-o"></i> Delete</a>
                }
                else if ((await UserEntityServices.GetCurrentUserEntityType(User)) == UserEntityType.Company)
                {
                    <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info-circle"></i> Details</a>
                }
                
            </td>
        </tr>
}
    </tbody>
</table>

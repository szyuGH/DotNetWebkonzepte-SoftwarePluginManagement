@model WebApplication2.Models.Software

@using Microsoft.AspNetCore.Identity
@using WebApplication2.Models
@using WebApplication2.Models.UserEntities
@using WebApplication2.Services
@inject IUserEntityLoader UserEntityServices



@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Software</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>
<div>
    <br />
    <br />
    <h4>Available Plugins</h4>
    @if ((await UserEntityServices.GetCurrentUserEntityType(User)) >= UserEntityType.Editor)
    {
        <p>
            <a asp-action="CreatePlugin" asp-route-id="@Model.Id"><i class="fa fa-plus-circle"></i> Create New</a>
        </p>
    }
    <hr />
    @await Html.PartialAsync("_SoftwarePlugins", Model.Plugins)
</div>
@if ((await UserEntityServices.GetCurrentUserEntityType(User)) >= UserEntityType.Company)
{
    <div>
        @await Html.PartialAsync("_LicenseKeys", Model.LicenseKeys)
    </div>
}
<div>
@if ((await UserEntityServices.GetCurrentUserEntityType(User)) >= UserEntityType.Editor)
{
    <a asp-action="Edit" asp-route-id="@Model.Id"><i class="fa fa-pencil"></i> Edit</a> <text>|</text>
}
@if ((await UserEntityServices.GetCurrentUserEntityType(User)) >= UserEntityType.Editor)
{
    <a asp-action="Own"><i class="fa fa-arrow-circle-o-left"></i> Back to List</a>
}
else
{
    <a asp-action="Index"><i class="fa fa-arrow-circle-o-left"></i> Back to List</a>
}

</div>
